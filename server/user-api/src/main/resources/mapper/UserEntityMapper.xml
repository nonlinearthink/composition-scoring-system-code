<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.se2020g11.api.dao.UserEntityMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zucc.se2020g11.api.entity.UserEntity">
    <id column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_male" jdbcType="BIT" property="isMale" />
    <result column="vip_days" jdbcType="INTEGER" property="vipDays" />
    <result column="anthority" jdbcType="INTEGER" property="anthority" />
  </resultMap>
  <sql id="Base_Column_List">
    user_name, password, nick_name, signature, avatar_url, phone, email, is_male, vip_days, 
    anthority
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.se2020g11.api.entity.UserEntity">
    insert into user (user_name, password, nick_name, 
      signature, avatar_url, phone, 
      email, is_male, vip_days, 
      anthority)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{signature,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{isMale,jdbcType=BIT}, #{vipDays,jdbcType=INTEGER}, 
      #{anthority,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.se2020g11.api.entity.UserEntity">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isMale != null">
        is_male,
      </if>
      <if test="vipDays != null">
        vip_days,
      </if>
      <if test="anthority != null">
        anthority,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isMale != null">
        #{isMale,jdbcType=BIT},
      </if>
      <if test="vipDays != null">
        #{vipDays,jdbcType=INTEGER},
      </if>
      <if test="anthority != null">
        #{anthority,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.se2020g11.api.entity.UserEntity">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isMale != null">
        is_male = #{isMale,jdbcType=BIT},
      </if>
      <if test="vipDays != null">
        vip_days = #{vipDays,jdbcType=INTEGER},
      </if>
      <if test="anthority != null">
        anthority = #{anthority,jdbcType=INTEGER},
      </if>
    </set>
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.se2020g11.api.entity.UserEntity">
    update user
    set password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_male = #{isMale,jdbcType=BIT},
      vip_days = #{vipDays,jdbcType=INTEGER},
      anthority = #{anthority,jdbcType=INTEGER}
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
</mapper>