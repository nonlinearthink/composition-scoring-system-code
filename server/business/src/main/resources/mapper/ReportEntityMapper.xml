<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.se2020g11.api.dao.ReportEntityMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zucc.se2020g11.api.entity.ReportEntity">
    <id column="report_id" jdbcType="INTEGER" property="reportId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="re_comment_id" jdbcType="INTEGER" property="reCommentId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="composition_id" jdbcType="INTEGER" property="compositionId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="report_body" jdbcType="VARCHAR" property="reportBody" />
  </resultMap>
  <sql id="Base_Column_List">
    report_id, comment_id, re_comment_id, username, composition_id, time, report_body
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from report
    where report_id = #{reportId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from report
    where report_id = #{reportId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.se2020g11.api.entity.ReportEntity">
    insert into report (report_id, comment_id, re_comment_id, 
      username, composition_id, time, 
      report_body)
    values (#{reportId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{reCommentId,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{compositionId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{reportBody,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.se2020g11.api.entity.ReportEntity">
    insert into report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reportId != null">
        report_id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="reCommentId != null">
        re_comment_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="compositionId != null">
        composition_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="reportBody != null">
        report_body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reportId != null">
        #{reportId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="reCommentId != null">
        #{reCommentId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="compositionId != null">
        #{compositionId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="reportBody != null">
        #{reportBody,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.se2020g11.api.entity.ReportEntity">
    update report
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="reCommentId != null">
        re_comment_id = #{reCommentId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="compositionId != null">
        composition_id = #{compositionId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="reportBody != null">
        report_body = #{reportBody,jdbcType=VARCHAR},
      </if>
    </set>
    where report_id = #{reportId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.se2020g11.api.entity.ReportEntity">
    update report
    set comment_id = #{commentId,jdbcType=INTEGER},
      re_comment_id = #{reCommentId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      composition_id = #{compositionId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      report_body = #{reportBody,jdbcType=VARCHAR}
    where report_id = #{reportId,jdbcType=INTEGER}
  </update>
</mapper>