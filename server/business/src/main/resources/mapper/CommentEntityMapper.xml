<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.se2020g11.api.dao.CommentEntityMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zucc.se2020g11.api.entity.CommentEntity">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="composition_id" jdbcType="INTEGER" property="compositionId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="comment_body" jdbcType="VARCHAR" property="commentBody" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="valid" jdbcType="BIT" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, composition_id, username, comment_body, time, valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.zucc.se2020g11.api.entity.CommentEntity" useGeneratedKeys="true" keyProperty="commentId">
    insert into comment (comment_id, composition_id, username, 
      comment_body, time, valid
      )
    values (#{commentId,jdbcType=INTEGER}, #{compositionId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{commentBody,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{valid,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zucc.se2020g11.api.entity.CommentEntity">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="compositionId != null">
        composition_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="commentBody != null">
        comment_body,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="compositionId != null">
        #{compositionId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="commentBody != null">
        #{commentBody,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zucc.se2020g11.api.entity.CommentEntity">
    update comment
    <set>
      <if test="compositionId != null">
        composition_id = #{compositionId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="commentBody != null">
        comment_body = #{commentBody,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zucc.se2020g11.api.entity.CommentEntity">
    update comment
    set composition_id = #{compositionId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      comment_body = #{commentBody,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=BIT}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectAllSelective" parameterType="cn.edu.zucc.se2020g11.api.entity.CommentEntity" resultMap="BaseResultMap">
    select *
    from comment
    <where>
      <if test="compositionId != null">
        composition_id = #{compositionId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <delete id="deleteByCompositionId" parameterType="cn.edu.zucc.se2020g11.api.entity.CommentEntity">
    delete from comment
    where composition_id = #{compositionId,jdbcType=INTEGER}
  </delete>
</mapper>